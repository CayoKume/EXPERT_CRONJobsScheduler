// <auto-generated />
using System;
using Infrastructure.LinxMicrovix.Outbound.WebService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.LinxMicrovix.Outbound.WebService.Migrations
{
    [DbContext(typeof(LinxMicrovixOutboundDbContext))]
    [Migration("20250519185130_init-postgresql")]
    partial class initpostgresql
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxCommerce.B2CConsultaClientes", b =>
                {
                    b.Property<int>("cod_cliente_b2c")
                        .HasColumnType("int");

                    b.Property<int>("cod_cliente_erp")
                        .HasColumnType("int");

                    b.Property<string>("doc_cliente")
                        .HasColumnType("varchar(14)");

                    b.Property<bool?>("aceita_programa_fidelidade")
                        .HasColumnType("boolean")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<int?>("ativo")
                        .HasColumnType("integer")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<string>("bairro_cliente")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("cargo_cliente")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("cel_cliente")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("cep_cliente")
                        .HasColumnType("varchar(9)");

                    b.Property<string>("cidade_cliente")
                        .HasColumnType("varchar(40)");

                    b.Property<string>("complemento_end_cliente")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("dt_cadastro")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<DateTime?>("dt_expedicao_rg")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<DateTime?>("dt_nasc_cliente")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<DateTime?>("dt_update")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<string>("email_cliente")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("empresa_cliente")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("end_cliente")
                        .HasColumnType("varchar(250)");

                    b.Property<int?>("estado_civil_cliente")
                        .HasColumnType("integer")
                        .HasAnnotation("Custom:ColumnTypeMapper", "TinyInt");

                    b.Property<string>("fone_cliente")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("fone_comercial")
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<string>("naturalidade")
                        .HasColumnType("varchar(40)");

                    b.Property<string>("nm_cliente")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("nm_conjuge")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("nm_mae")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("nm_pai")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("nr_rua_cliente")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("numero_compl_rua_cliente")
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("portal")
                        .HasColumnType("int");

                    b.Property<bool?>("receber_email")
                        .HasColumnType("boolean")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<decimal?>("renda")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("rg_cliente")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("rg_orgao_emissor")
                        .HasColumnType("varchar(7)");

                    b.Property<string>("sexo_cliente")
                        .HasColumnType("char(1)");

                    b.Property<int?>("tempo_residencia")
                        .HasColumnType("integer")
                        .HasAnnotation("Custom:ColumnTypeMapper", "TinyInt");

                    b.Property<long?>("timestamp")
                        .HasColumnType("bigint");

                    b.Property<string>("tipo_pessoa")
                        .HasColumnType("char(1)");

                    b.Property<string>("uf_cliente")
                        .HasColumnType("char(2)");

                    b.HasKey("cod_cliente_b2c", "cod_cliente_erp", "doc_cliente");

                    b.ToTable("B2CConsultaClientes", "linx_microvix_commerce");
                });

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxCommerce.B2CConsultaClientesEnderecosEntrega", b =>
                {
                    b.Property<int>("id_endereco_entrega")
                        .HasColumnType("int");

                    b.Property<int>("cod_cliente_erp")
                        .HasColumnType("int");

                    b.Property<int>("cod_cliente_b2c")
                        .HasColumnType("int");

                    b.Property<int>("id_cidade")
                        .HasColumnType("int");

                    b.Property<string>("bairro_cliente")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("cep_cliente")
                        .HasColumnType("char(9)");

                    b.Property<string>("cidade_cliente")
                        .HasColumnType("varchar(40)");

                    b.Property<string>("complemento_end_cli")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("descricao")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("endereco_cliente")
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime?>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<string>("numero_rua_cliente")
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("portal")
                        .HasColumnType("int");

                    b.Property<bool?>("principal")
                        .HasColumnType("boolean")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<long?>("timestamp")
                        .HasColumnType("bigint");

                    b.Property<string>("uf_cliente")
                        .HasColumnType("char(2)");

                    b.HasKey("id_endereco_entrega", "cod_cliente_erp", "cod_cliente_b2c", "id_cidade");

                    b.ToTable("B2CConsultaClientesEnderecosEntrega", "linx_microvix_commerce");
                });

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxCommerce.B2CConsultaEmpresas", b =>
                {
                    b.Property<int>("empresa")
                        .HasColumnType("int");

                    b.Property<string>("cnpj_emp")
                        .HasColumnType("varchar(14)");

                    b.Property<string>("bairro_unidade")
                        .HasColumnType("varchar(60)");

                    b.Property<bool?>("centro_distribuicao")
                        .HasColumnType("boolean")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<string>("cep_unidade")
                        .HasColumnType("varchar(9)");

                    b.Property<string>("cidade_unidade")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("complemento_end_unidade")
                        .HasColumnType("varchar(60)");

                    b.Property<DateTime?>("data_criacao")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<string>("email_unidade")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("end_unidade")
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime?>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<string>("nome_emp")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("nr_rua_unidade")
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("portal")
                        .HasColumnType("int");

                    b.Property<long?>("timestamp")
                        .HasColumnType("bigint");

                    b.Property<string>("uf_unidade")
                        .HasColumnType("char(2)");

                    b.HasKey("empresa", "cnpj_emp");

                    b.ToTable("B2CConsultaEmpresas", "linx_microvix_commerce");
                });

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxCommerce.B2CConsultaNFe", b =>
                {
                    b.Property<int>("id_nfe")
                        .HasColumnType("int");

                    b.Property<int>("id_pedido")
                        .HasColumnType("int");

                    b.Property<string>("chave_nfe")
                        .HasColumnType("char(44)");

                    b.Property<string>("codigo_modelo_nf")
                        .HasColumnType("varchar(3)");

                    b.Property<DateTime?>("data_emissao")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<int?>("documento")
                        .HasColumnType("int");

                    b.Property<DateTime?>("dt_insert")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<bool?>("excluido")
                        .HasColumnType("boolean")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<decimal?>("frete")
                        .HasColumnType("decimal(10,2)");

                    b.Property<Guid?>("identificador_microvix")
                        .HasColumnType("uuid")
                        .HasAnnotation("Custom:ColumnTypeMapper", "UUID");

                    b.Property<string>("justificativa")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<string>("nProt")
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("portal")
                        .HasColumnType("int");

                    b.Property<string>("serie")
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("situacao")
                        .HasColumnType("integer")
                        .HasAnnotation("Custom:ColumnTypeMapper", "TinyInt");

                    b.Property<long?>("timestamp")
                        .HasColumnType("bigint");

                    b.Property<int?>("tpAmb")
                        .HasColumnType("int");

                    b.Property<decimal?>("valor_nota")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("xml")
                        .HasColumnType("text")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Varchar_Max");

                    b.HasKey("id_nfe", "id_pedido", "chave_nfe");

                    b.ToTable("B2CConsultaNFe", "linx_microvix_commerce");
                });

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxCommerce.B2CConsultaNFeSituacao", b =>
                {
                    b.Property<int>("id_nfe_situacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Custom:ColumnTypeMapper", "TinyInt");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_nfe_situacao"));

                    b.Property<string>("descricao")
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<int?>("portal")
                        .HasColumnType("int");

                    b.Property<long?>("timestamp")
                        .HasColumnType("bigint");

                    b.HasKey("id_nfe_situacao");

                    b.ToTable("B2CConsultaNFeSituacao", "linx_microvix_commerce");
                });

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxCommerce.B2CConsultaPedidos", b =>
                {
                    b.Property<int>("id_pedido")
                        .HasColumnType("int");

                    b.Property<int>("cod_cliente_erp")
                        .HasColumnType("int");

                    b.Property<int>("cod_cliente_b2c")
                        .HasColumnType("int");

                    b.Property<string>("order_id")
                        .HasColumnType("varchar(40)");

                    b.Property<string>("anotacao")
                        .HasColumnType("varchar(400)");

                    b.Property<int?>("ativo")
                        .HasColumnType("integer")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<int?>("cod_transportador")
                        .HasColumnType("int");

                    b.Property<int?>("cod_vendedor")
                        .HasColumnType("int");

                    b.Property<DateTime?>("dt_disponivel_faturamento")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<DateTime?>("dt_insert")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<DateTime?>("dt_pedido")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<string>("ecommerce_origem")
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("empresa")
                        .HasColumnType("int");

                    b.Property<int?>("finalizado")
                        .HasColumnType("integer")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<int?>("forma_pgto")
                        .HasColumnType("int");

                    b.Property<int?>("id_status")
                        .HasColumnType("int");

                    b.Property<int?>("id_tabela_preco")
                        .HasColumnType("int");

                    b.Property<int?>("id_tipo_b2c")
                        .HasColumnType("integer")
                        .HasAnnotation("Custom:ColumnTypeMapper", "TinyInt");

                    b.Property<DateTime?>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<string>("mensagem_falha_faturamento")
                        .HasColumnType("text")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Varchar_Max");

                    b.Property<int?>("plano_pagamento")
                        .HasColumnType("int");

                    b.Property<int?>("portal")
                        .HasColumnType("int");

                    b.Property<decimal?>("taxa_impressao")
                        .HasColumnType("decimal(10,2)");

                    b.Property<long?>("timestamp")
                        .HasColumnType("bigint");

                    b.Property<int?>("tipo_cobranca_frete")
                        .HasColumnType("int");

                    b.Property<int?>("tipo_frete")
                        .HasColumnType("int");

                    b.Property<decimal?>("valor_credito")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("valor_frete_gratis")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("vl_frete")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("id_pedido", "cod_cliente_erp", "cod_cliente_b2c", "order_id");

                    b.ToTable("B2CConsultaPedidos", "linx_microvix_commerce");
                });

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxCommerce.B2CConsultaPedidosIdentificador", b =>
                {
                    b.Property<Guid>("identificador")
                        .HasColumnType("uuid")
                        .HasAnnotation("Custom:ColumnTypeMapper", "UUID");

                    b.Property<int>("id_venda")
                        .HasColumnType("int");

                    b.Property<string>("order_id")
                        .HasColumnType("varchar(40)");

                    b.Property<int>("id_cliente")
                        .HasColumnType("int");

                    b.Property<DateTime?>("data_origem")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<int?>("empresa")
                        .HasColumnType("int");

                    b.Property<DateTime?>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<int?>("portal")
                        .HasColumnType("int");

                    b.Property<long?>("timestamp")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("valor_frete")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("identificador", "id_venda", "order_id", "id_cliente");

                    b.ToTable("B2CConsultaPedidosIdentificador", "linx_microvix_commerce");
                });

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxCommerce.B2CConsultaPedidosItens", b =>
                {
                    b.Property<int>("id_pedido_item")
                        .HasColumnType("int");

                    b.Property<int>("id_pedido")
                        .HasColumnType("int");

                    b.Property<long>("codigoproduto")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<int?>("portal")
                        .HasColumnType("int");

                    b.Property<int?>("quantidade")
                        .HasColumnType("int");

                    b.Property<long?>("timestamp")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("vl_unitario")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("id_pedido_item", "id_pedido", "codigoproduto");

                    b.ToTable("B2CConsultaPedidosItens", "linx_microvix_commerce");
                });

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxCommerce.B2CConsultaPedidosStatus", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<int>("id_pedido")
                        .HasColumnType("int");

                    b.Property<string>("anotacao")
                        .HasColumnType("varchar(80)");

                    b.Property<DateTime?>("data_hora")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<int?>("id_status")
                        .HasColumnType("integer")
                        .HasAnnotation("Custom:ColumnTypeMapper", "TinyInt");

                    b.Property<DateTime?>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<int?>("portal")
                        .HasColumnType("int");

                    b.Property<long?>("timestamp")
                        .HasColumnType("bigint");

                    b.HasKey("id", "id_pedido");

                    b.ToTable("B2CConsultaPedidosStatus", "linx_microvix_commerce");
                });

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxCommerce.B2CConsultaStatus", b =>
                {
                    b.Property<int>("id_status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_status"));

                    b.Property<string>("descricao_status")
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<int?>("portal")
                        .HasColumnType("int");

                    b.Property<long?>("timestamp")
                        .HasColumnType("bigint");

                    b.HasKey("id_status");

                    b.ToTable("B2CConsultaStatus", "linx_microvix_commerce");
                });

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxMicrovix.LinxB2CPedidos", b =>
                {
                    b.Property<int>("id_pedido")
                        .HasColumnType("int");

                    b.Property<int>("cod_cliente_erp")
                        .HasColumnType("int");

                    b.Property<int>("cod_cliente_b2c")
                        .HasColumnType("int");

                    b.Property<int>("empresa")
                        .HasColumnType("int");

                    b.Property<string>("order_id")
                        .HasColumnType("varchar(40)");

                    b.Property<string>("anotacao")
                        .IsRequired()
                        .HasColumnType("varchar(400)");

                    b.Property<bool>("ativo")
                        .HasColumnType("boolean")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<int>("cod_transportador")
                        .HasColumnType("int");

                    b.Property<int>("cod_vendedor")
                        .HasColumnType("int");

                    b.Property<DateTime>("dt_disponivel_faturamento")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<DateTime>("dt_insert")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<DateTime>("dt_pedido")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<string>("ecommerce_origem")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("finalizado")
                        .HasColumnType("boolean")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<int>("forma_pgto")
                        .HasColumnType("int");

                    b.Property<int>("id_status")
                        .HasColumnType("int");

                    b.Property<int>("id_tabela_preco")
                        .HasColumnType("int");

                    b.Property<int>("id_tipo_b2c")
                        .HasColumnType("int");

                    b.Property<DateTime>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<string>("marketplace_loja")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.Property<string>("mensagem_falha_faturamento")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Varchar_Max");

                    b.Property<int>("plano_pagamento")
                        .HasColumnType("int");

                    b.Property<int>("portal")
                        .HasColumnType("int");

                    b.Property<decimal>("taxa_impressao")
                        .HasColumnType("decimal(10,2)");

                    b.Property<long>("timestamp")
                        .HasColumnType("bigint");

                    b.Property<int>("tipo_cobranca_frete")
                        .HasColumnType("int");

                    b.Property<int>("tipo_frete")
                        .HasColumnType("int");

                    b.Property<decimal>("valor_credito")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("valor_frete_gratis")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("vl_frete")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("id_pedido", "cod_cliente_erp", "cod_cliente_b2c", "empresa", "order_id");

                    b.ToTable("LinxB2CPedidos", "linx_microvix_erp");
                });

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxMicrovix.LinxB2CPedidosItens", b =>
                {
                    b.Property<int>("id_pedido_item")
                        .HasColumnType("int");

                    b.Property<int>("id_pedido")
                        .HasColumnType("int");

                    b.Property<long>("codigoproduto")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<int>("portal")
                        .HasColumnType("int");

                    b.Property<int>("quantidade")
                        .HasColumnType("int");

                    b.Property<long>("timestamp")
                        .HasColumnType("bigint");

                    b.Property<decimal>("vl_unitario")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("id_pedido_item", "id_pedido", "codigoproduto");

                    b.ToTable("LinxB2CPedidosItens", "linx_microvix_erp");
                });

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxMicrovix.LinxB2CPedidosStatus", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("anotacao")
                        .HasColumnType("varchar(80)");

                    b.Property<DateTime?>("data_hora")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<int?>("id_pedido")
                        .HasColumnType("int");

                    b.Property<int?>("id_status")
                        .HasColumnType("int");

                    b.Property<DateTime>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<int?>("portal")
                        .HasColumnType("int");

                    b.Property<long?>("timestamp")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.ToTable("LinxB2CPedidosStatus", "linx_microvix_erp");
                });

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxMicrovix.LinxB2CStatus", b =>
                {
                    b.Property<int>("id_status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_status"));

                    b.Property<string>("descricao_status")
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<int?>("portal")
                        .HasColumnType("int");

                    b.Property<long?>("timestamp")
                        .HasColumnType("bigint");

                    b.HasKey("id_status");

                    b.ToTable("LinxB2CStatus", "linx_microvix_erp");
                });

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxMicrovix.LinxCfopFiscal", b =>
                {
                    b.Property<int>("id_cfop_fiscal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_cfop_fiscal"));

                    b.Property<string>("cfop_fiscal")
                        .HasColumnType("varchar(5)");

                    b.Property<string>("descricao")
                        .HasColumnType("varchar(300)");

                    b.Property<bool>("excluido")
                        .HasColumnType("boolean")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<DateTime?>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<int>("portal")
                        .HasColumnType("int");

                    b.Property<long>("timestamp")
                        .HasColumnType("bigint");

                    b.HasKey("id_cfop_fiscal");

                    b.ToTable("LinxCfopFiscal", "linx_microvix_erp");
                });

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxMicrovix.LinxClientesEnderecosEntrega", b =>
                {
                    b.Property<int>("id_endereco_entrega")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_endereco_entrega"));

                    b.Property<string>("bairro_cliente")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("cep_cliente")
                        .HasColumnType("char(9)");

                    b.Property<string>("cidade_cliente")
                        .HasColumnType("varchar(40)");

                    b.Property<int?>("cod_cliente")
                        .HasColumnType("int");

                    b.Property<string>("complemento_end_cli")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("descricao")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("endereco_cliente")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("fone_celular")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("fone_cliente")
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<string>("numero_rua_cliente")
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("portal")
                        .HasColumnType("int");

                    b.Property<bool?>("principal")
                        .HasColumnType("boolean")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<long?>("timestamp")
                        .HasColumnType("bigint");

                    b.Property<string>("uf_cliente")
                        .HasColumnType("char(2)");

                    b.HasKey("id_endereco_entrega");

                    b.ToTable("LinxClientesEnderecosEntrega", "linx_microvix_erp");
                });

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxMicrovix.LinxClientesFornec", b =>
                {
                    b.Property<int>("cod_cliente")
                        .HasColumnType("int");

                    b.Property<string>("doc_cliente")
                        .HasColumnType("varchar(14)");

                    b.Property<string>("ativo")
                        .HasColumnType("char(1)");

                    b.Property<string>("bairro_cliente")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("cartao_fidelidade")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("cel_cliente")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("cep_cliente")
                        .HasColumnType("char(9)");

                    b.Property<string>("cidade_cliente")
                        .HasColumnType("varchar(40)");

                    b.Property<string>("classe_cliente")
                        .HasColumnType("varchar(83)");

                    b.Property<bool?>("cliente_anonimo")
                        .HasColumnType("boolean")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<int?>("cod_ibge_municipio")
                        .HasColumnType("int");

                    b.Property<string>("codigo_ws")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("complement_end_cli")
                        .HasColumnType("varchar(60)");

                    b.Property<DateTime?>("data_cadastro")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<DateTime?>("data_nascimento")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<DateTime?>("dt_update")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<string>("email_cliente")
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("empresa_cadastro")
                        .HasColumnType("int");

                    b.Property<string>("endereco_cliente")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("fax_cliente")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("fone_cliente")
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("id_classe_fiscal")
                        .HasColumnType("int");

                    b.Property<int?>("id_estado_civil")
                        .HasColumnType("int");

                    b.Property<string>("identidade_cliente")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("incricao_municipal")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("inscricao_estadual")
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<decimal?>("limite_compras")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("limite_credito_compra")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("mae")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("matricula_conveniado")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("nome_cliente")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("numero_rua_cliente")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("obs")
                        .HasColumnType("text")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Varchar_Max");

                    b.Property<string>("pais")
                        .HasColumnType("varchar(80)");

                    b.Property<int?>("portal")
                        .HasColumnType("int");

                    b.Property<string>("razao_cliente")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("sexo")
                        .HasColumnType("char(1)");

                    b.Property<string>("site_cliente")
                        .HasColumnType("varchar(50)");

                    b.Property<long?>("timestamp")
                        .HasColumnType("bigint");

                    b.Property<string>("tipo_cadastro")
                        .HasColumnType("char(1)");

                    b.Property<string>("tipo_cliente")
                        .HasColumnType("char(1)");

                    b.Property<string>("uf_cliente")
                        .HasColumnType("varchar(20)");

                    b.HasKey("cod_cliente", "doc_cliente");

                    b.ToTable("LinxClientesFornec", "linx_microvix_erp");
                });

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxMicrovix.LinxGrupoLojas", b =>
                {
                    b.Property<int>("id_empresas_rede")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_empresas_rede"));

                    b.Property<string>("classificacao_portal")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("cnpj")
                        .HasColumnType("varchar(14)");

                    b.Property<int?>("empresa")
                        .HasColumnType("int");

                    b.Property<DateTime?>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<string>("nome_empresa")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("nome_portal")
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("portal")
                        .HasColumnType("int");

                    b.Property<string>("rede")
                        .HasColumnType("varchar(100)");

                    b.HasKey("id_empresas_rede");

                    b.ToTable("LinxGrupoLojas", "linx_microvix_erp");
                });

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxMicrovix.LinxLojas", b =>
                {
                    b.Property<int>("empresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("empresa"));

                    b.Property<decimal?>("area_empresa")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("bairro_emp")
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("centro_distribuicao")
                        .HasColumnType("boolean")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<string>("cep_emp")
                        .HasColumnType("char(9)");

                    b.Property<string>("cidade_emp")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("cnae_emp")
                        .HasColumnType("varchar(7)");

                    b.Property<string>("cnpj_emp")
                        .HasColumnType("varchar(14)");

                    b.Property<string>("cod_cliente_linx")
                        .HasColumnType("varchar(6)");

                    b.Property<int?>("cod_ibge_municipio")
                        .HasColumnType("int");

                    b.Property<string>("complement_emp")
                        .HasColumnType("varchar(60)");

                    b.Property<DateTime?>("data_criacao_emp")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<DateTime?>("data_criacao_portal")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<string>("email_emp")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("endereco_emp")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("estado_emp")
                        .HasColumnType("char(2)");

                    b.Property<string>("fone_emp")
                        .HasColumnType("varchar(70)");

                    b.Property<int?>("id_classe_fiscal")
                        .HasColumnType("int");

                    b.Property<string>("inscricao_emp")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("inscricao_municipal_emp")
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<string>("nome_emp")
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("num_emp")
                        .HasColumnType("int");

                    b.Property<int?>("portal")
                        .HasColumnType("int");

                    b.Property<string>("razao_emp")
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("regime_tributario")
                        .HasColumnType("int");

                    b.Property<string>("sigla_empresa")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("sistema_tributacao")
                        .HasColumnType("char(1)");

                    b.Property<int?>("tabela_preco_preferencial")
                        .HasColumnType("int");

                    b.Property<int?>("timestamp")
                        .HasColumnType("int");

                    b.HasKey("empresa");

                    b.ToTable("LinxLojas", "linx_microvix_erp");
                });

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxMicrovix.LinxMovimento", b =>
                {
                    b.Property<string>("cnpj_emp")
                        .HasColumnType("varchar(14)");

                    b.Property<int>("documento")
                        .HasColumnType("int");

                    b.Property<string>("chave_nf")
                        .HasColumnType("varchar(44)");

                    b.Property<DateTime>("data_documento")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<int>("codigo_cliente")
                        .HasColumnType("int");

                    b.Property<long>("cod_produto")
                        .HasColumnType("bigint");

                    b.Property<string>("cancelado")
                        .HasColumnType("char(1)");

                    b.Property<string>("excluido")
                        .HasColumnType("char(1)");

                    b.Property<int>("transacao_pedido_venda")
                        .HasColumnType("int");

                    b.Property<int>("ordem")
                        .HasColumnType("int");

                    b.Property<decimal?>("acrescimo")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("acrescimo_item")
                        .HasColumnType("numeric")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<decimal?>("acrescimo_total_item")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("aliq_iss")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("aliquota_cofins")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("aliquota_icms")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("aliquota_icms_st")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("aliquota_ipi")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("aliquota_iss")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("aliquota_pis")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("base_cofins")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("base_icms")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("base_icms_st")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("base_ipi")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("base_iss")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("base_pis")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("cod_barra")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("cod_natureza_operacao")
                        .HasColumnType("char(10)");

                    b.Property<int?>("cod_sefaz_situacao")
                        .HasColumnType("int");

                    b.Property<int?>("cod_vendedor")
                        .HasColumnType("int");

                    b.Property<string>("codigo_modelo_nf")
                        .HasColumnType("varchar(5)");

                    b.Property<int?>("codigo_rotina_origem")
                        .HasColumnType("int");

                    b.Property<string>("codigo_status_nfe")
                        .HasColumnType("varchar(5)");

                    b.Property<string>("conferido")
                        .HasColumnType("char(1)");

                    b.Property<string>("cst_cofins")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("cst_icms")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("cst_ipi")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("cst_pis")
                        .HasColumnType("varchar(4)");

                    b.Property<DateTime?>("data_lancamento")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<string>("deposito")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("desc_cfop")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("desc_sefaz_situacao")
                        .HasColumnType("varchar(30)");

                    b.Property<decimal?>("desconto")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("desconto_item")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("desconto_total_item")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("despesas")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("despesas_total_item")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime?>("dt_update")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<int?>("ecf")
                        .HasColumnType("int");

                    b.Property<int?>("empresa")
                        .HasColumnType("int");

                    b.Property<int?>("forma_cartao")
                        .HasColumnType("integer")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<int?>("forma_cheque")
                        .HasColumnType("integer")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<int?>("forma_cheque_prazo")
                        .HasColumnType("integer")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<int?>("forma_convenio")
                        .HasColumnType("integer")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<int?>("forma_crediario")
                        .HasColumnType("integer")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<int?>("forma_deposito_bancario")
                        .HasColumnType("integer")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<int?>("forma_dinheiro")
                        .HasColumnType("integer")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<int?>("forma_pix")
                        .HasColumnType("integer")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<decimal?>("frete")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("hora_lancamento")
                        .HasColumnType("char(5)");

                    b.Property<decimal?>("icms_aliquota_desonerado")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("icms_base_desonerado_item")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("icms_st_antecipado_aliquota")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("icms_st_antecipado_margem")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("icms_st_antecipado_percentual_reducao")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("icms_st_antecipado_valor_item")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("icms_valor_desonerado_item")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("id_cfop")
                        .HasColumnType("varchar(5)");

                    b.Property<int?>("id_venda_produto_b2c")
                        .HasColumnType("int");

                    b.Property<Guid?>("identificador")
                        .HasColumnType("uuid")
                        .HasAnnotation("Custom:ColumnTypeMapper", "UUID");

                    b.Property<decimal?>("iss_base_item")
                        .HasColumnType("decimal(10,2)");

                    b.Property<bool?>("item_promocional")
                        .HasColumnType("boolean")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<DateTime?>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<bool?>("mob_checkout")
                        .HasColumnType("boolean")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<int?>("modelo_nf")
                        .HasColumnType("int");

                    b.Property<string>("natureza_operacao")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("nome_tabela_preco")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("numero_serie_ecf")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("obs")
                        .HasColumnType("text")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Varchar_Max");

                    b.Property<string>("operacao")
                        .HasColumnType("char(2)");

                    b.Property<int?>("portal")
                        .HasColumnType("int");

                    b.Property<decimal?>("preco_custo")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("preco_tabela_epoca")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("preco_unitario")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("protocolo_aut_nfe")
                        .HasColumnType("varchar(15)");

                    b.Property<decimal?>("quantidade")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("seguro_total_item")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("serie")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("soma_relatorio")
                        .HasColumnType("char(1)");

                    b.Property<int?>("tabela_preco")
                        .HasColumnType("int");

                    b.Property<long?>("timestamp")
                        .HasColumnType("bigint");

                    b.Property<string>("tipo_transacao")
                        .HasColumnType("char(1)");

                    b.Property<decimal?>("total_cartao")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("total_cheque")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("total_cheque_prazo")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("total_convenio")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("total_crediario")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("total_deposito_bancario")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("total_dinheiro")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("total_pix")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("transacao")
                        .HasColumnType("int");

                    b.Property<int?>("transportador")
                        .HasColumnType("int");

                    b.Property<decimal?>("troco")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("usuario")
                        .HasColumnType("int");

                    b.Property<decimal?>("valor_cofins")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("valor_icms")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("valor_icms_st")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("valor_ipi")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("valor_liquido")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("valor_pis")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("valor_total")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("cnpj_emp", "documento", "chave_nf", "data_documento", "codigo_cliente", "cod_produto", "cancelado", "excluido", "transacao_pedido_venda", "ordem");

                    b.ToTable("LinxMovimento", "linx_microvix_erp");
                });

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxMicrovix.LinxMovimentoCartoes", b =>
                {
                    b.Property<Guid>("identificador")
                        .HasColumnType("uuid")
                        .HasAnnotation("Custom:ColumnTypeMapper", "UUID");

                    b.Property<string>("cnpj_emp")
                        .HasColumnType("varchar(14)");

                    b.Property<string>("cupomfiscal")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("cod_autorizacao")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("cartao_prepago")
                        .HasColumnType("varchar(1)");

                    b.Property<string>("codlojasitef")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("credito_debito")
                        .HasColumnType("varchar(1)");

                    b.Property<DateTime?>("data_lancamento")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<string>("descricao_bandeira")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("descricao_maquineta")
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("id_antecipacoes_financeiras")
                        .HasColumnType("int");

                    b.Property<int?>("id_cartao_bandeira")
                        .HasColumnType("int");

                    b.Property<int?>("id_maquineta_pos")
                        .HasColumnType("int");

                    b.Property<DateTime?>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<string>("nsu_host")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("nsu_sitef")
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("ordem_cartao")
                        .HasColumnType("int");

                    b.Property<int?>("portal")
                        .HasColumnType("int");

                    b.Property<string>("serie_maquineta")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("texto_comprovante")
                        .HasColumnType("text")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Varchar_Max");

                    b.Property<long?>("timestamp")
                        .HasColumnType("bigint");

                    b.Property<bool?>("transacao_servico_terceiro")
                        .HasColumnType("boolean")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<decimal?>("valor")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("identificador", "cnpj_emp", "cupomfiscal", "cod_autorizacao");

                    b.ToTable("LinxMovimentoCartoes", "linx_microvix_erp");
                });

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxMicrovix.LinxMovimentoPlanos", b =>
                {
                    b.Property<string>("cnpj_emp")
                        .HasColumnType("varchar(14)");

                    b.Property<Guid>("identificador")
                        .HasColumnType("uuid")
                        .HasAnnotation("Custom:ColumnTypeMapper", "UUID");

                    b.Property<int>("plano")
                        .HasColumnType("int");

                    b.Property<int?>("cod_forma_pgto")
                        .HasColumnType("int");

                    b.Property<string>("desc_plano")
                        .HasColumnType("varchar(35)");

                    b.Property<int?>("empresa")
                        .HasColumnType("int");

                    b.Property<string>("forma_pgto")
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("indice_plano")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime?>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<int?>("ordem_cartao")
                        .HasColumnType("int");

                    b.Property<int?>("portal")
                        .HasColumnType("int");

                    b.Property<int?>("qtde_parcelas")
                        .HasColumnType("int");

                    b.Property<decimal?>("taxa_financeira")
                        .HasColumnType("decimal(10,2)");

                    b.Property<long?>("timestamp")
                        .HasColumnType("bigint");

                    b.Property<string>("tipo_transacao")
                        .HasColumnType("char(1)");

                    b.Property<decimal?>("total")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("cnpj_emp", "identificador", "plano");

                    b.ToTable("LinxMovimentoPlanos", "linx_microvix_erp");
                });

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxMicrovix.LinxMovimentoReshop", b =>
                {
                    b.Property<Guid>("identificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasAnnotation("Custom:ColumnTypeMapper", "UUID");

                    b.Property<bool?>("aplicar_desconto_venda")
                        .HasColumnType("boolean")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<string>("descricao")
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("id_campanha")
                        .HasColumnType("int");

                    b.Property<int?>("id_movimento_campanha_reshop")
                        .HasColumnType("int");

                    b.Property<DateTime?>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<string>("nome")
                        .HasColumnType("varchar(200)");

                    b.Property<long?>("timestamp")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("valor_desconto_completo")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("valor_desconto_subtotal")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("identificador");

                    b.ToTable("LinxMovimentoReshop", "linx_microvix_erp");
                });

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxMicrovix.LinxMovimentoReshopItens", b =>
                {
                    b.Property<int>("id_movimento_campanha_reshop_item")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_movimento_campanha_reshop_item"));

                    b.Property<int?>("id_campanha")
                        .HasColumnType("int");

                    b.Property<Guid?>("identificador")
                        .HasColumnType("uuid")
                        .HasAnnotation("Custom:ColumnTypeMapper", "UUID");

                    b.Property<DateTime?>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<int?>("ordem")
                        .HasColumnType("int");

                    b.Property<decimal>("quantidade")
                        .HasColumnType("decimal(10,2)");

                    b.Property<long?>("timestamp")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("valor_desconto_item")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("valor_original")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("valor_unitario")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("id_movimento_campanha_reshop_item");

                    b.ToTable("LinxMovimentoReshopItens", "linx_microvix_erp");
                });

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxMicrovix.LinxMovimentoTrocas", b =>
                {
                    b.Property<string>("cnpj_emp")
                        .HasColumnType("varchar(14)");

                    b.Property<long>("num_vale")
                        .HasColumnType("bigint");

                    b.Property<int>("doc_origem")
                        .HasColumnType("int");

                    b.Property<int>("doc_venda")
                        .HasColumnType("int");

                    b.Property<int>("doc_venda_origem")
                        .HasColumnType("int");

                    b.Property<int>("cod_cliente")
                        .HasColumnType("int");

                    b.Property<int?>("desfazimento")
                        .HasColumnType("integer")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<int?>("empresa")
                        .HasColumnType("int");

                    b.Property<bool?>("excluido")
                        .HasColumnType("boolean")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<int?>("id_vale_ordem_servico_externa")
                        .HasColumnType("int");

                    b.Property<Guid?>("identificador")
                        .HasColumnType("uuid")
                        .HasAnnotation("Custom:ColumnTypeMapper", "UUID");

                    b.Property<DateTime?>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<string>("motivo")
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("portal")
                        .HasColumnType("int");

                    b.Property<string>("serie_origem")
                        .HasColumnType("char(10)");

                    b.Property<string>("serie_venda")
                        .HasColumnType("char(10)");

                    b.Property<string>("serie_venda_origem")
                        .HasColumnType("char(10)");

                    b.Property<long?>("timestamp")
                        .HasColumnType("bigint");

                    b.Property<int?>("vale_cod_cliente")
                        .HasColumnType("int");

                    b.Property<long?>("vale_codigoproduto")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("valor_vale")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("cnpj_emp", "num_vale", "doc_origem", "doc_venda", "doc_venda_origem", "cod_cliente");

                    b.ToTable("LinxMovimentoTrocas", "linx_microvix_erp");
                });

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxMicrovix.LinxNaturezaOperacao", b =>
                {
                    b.Property<string>("cod_natureza_operacao")
                        .HasColumnType("char(10)");

                    b.Property<string>("atualiza_custo")
                        .HasColumnType("char(1)");

                    b.Property<bool?>("atualiza_custo_medio")
                        .HasColumnType("boolean")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<int?>("baixar_estoque")
                        .HasColumnType("integer")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<bool?>("base_icms_considera_ipi")
                        .HasColumnType("boolean")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<int?>("calcula_ipi")
                        .HasColumnType("integer")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<int?>("calcula_irrf")
                        .HasColumnType("integer")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<int?>("calcula_iss")
                        .HasColumnType("integer")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<string>("codigo_ws")
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("consumo_proprio")
                        .HasColumnType("boolean")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<bool?>("contabiliza_cmv")
                        .HasColumnType("boolean")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<int?>("deposito_reserva_venda")
                        .HasColumnType("int");

                    b.Property<string>("descricao")
                        .HasColumnType("varchar(60)");

                    b.Property<bool?>("despesa")
                        .HasColumnType("boolean")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<bool?>("diferencial_ativo_consumo")
                        .HasColumnType("boolean")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<bool?>("exibe_nfe")
                        .HasColumnType("boolean")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<bool?>("exibir_informacoes_imposto")
                        .HasColumnType("boolean")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<bool?>("exige_nf_origem")
                        .HasColumnType("boolean")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<bool?>("faturamento_antecipado")
                        .HasColumnType("boolean")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<bool?>("gera_garantia_nacional")
                        .HasColumnType("boolean")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<int?>("id_obs")
                        .HasColumnType("int");

                    b.Property<bool?>("import_produtos")
                        .HasColumnType("boolean")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<string>("inativa")
                        .HasColumnType("char(1)");

                    b.Property<bool?>("insere_obs_pis_cofins")
                        .HasColumnType("boolean")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<int?>("integra_contabilidade")
                        .HasColumnType("integer")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<DateTime?>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<string>("operacao")
                        .HasColumnType("char(2)");

                    b.Property<bool?>("permite_escolha_historico")
                        .HasColumnType("boolean")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<int?>("portal")
                        .HasColumnType("int");

                    b.Property<bool?>("recusa_de")
                        .HasColumnType("boolean")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<string>("soma_relatorios")
                        .HasColumnType("char(1)");

                    b.Property<long?>("timestamp")
                        .HasColumnType("bigint");

                    b.Property<string>("tipo_preco")
                        .HasColumnType("char(2)");

                    b.Property<int?>("transferencia")
                        .HasColumnType("integer")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<bool?>("transferencia_deposito")
                        .HasColumnType("boolean")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<bool?>("venda_diferencial_aliquota")
                        .HasColumnType("boolean")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<bool?>("venda_futura")
                        .HasColumnType("boolean")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.HasKey("cod_natureza_operacao");

                    b.ToTable("LinxNaturezaOperacao", "linx_microvix_erp");
                });

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxMicrovix.LinxPedidosCompra", b =>
                {
                    b.Property<string>("cnpj_emp")
                        .HasColumnType("varchar(14)");

                    b.Property<int>("cod_pedido")
                        .HasColumnType("int");

                    b.Property<int>("codigo_fornecedor")
                        .HasColumnType("int");

                    b.Property<long>("cod_produto")
                        .HasColumnType("bigint");

                    b.Property<string>("aprovado")
                        .HasColumnType("char(1)");

                    b.Property<string>("cancelado")
                        .HasColumnType("char(1)");

                    b.Property<int?>("cod_comprador")
                        .HasColumnType("int");

                    b.Property<int?>("cod_plano_pagamento")
                        .HasColumnType("int");

                    b.Property<DateTime?>("data_aprovacao")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<DateTime?>("data_pedido")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<string>("descricao_frete")
                        .HasColumnType("varchar(40)");

                    b.Property<int?>("empresa")
                        .HasColumnType("int");

                    b.Property<string>("encerrado")
                        .HasColumnType("char(1)");

                    b.Property<int?>("integrado_linx")
                        .HasColumnType("integer")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<DateTime?>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<string>("natureza_operacao")
                        .HasColumnType("varchar(73)");

                    b.Property<int?>("nf_gerada")
                        .HasColumnType("int");

                    b.Property<string>("nf_origem_ws")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("numero_ped_fornec")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("numero_projeto_officina")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("obs")
                        .HasColumnType("text")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Varchar_Max");

                    b.Property<string>("plano_pagamento")
                        .HasColumnType("varchar(35)");

                    b.Property<int?>("portal")
                        .HasColumnType("int");

                    b.Property<DateTime?>("previsao_entrega")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<decimal?>("qtde_entregue")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("quantidade")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("status_pedido")
                        .HasColumnType("char(1)");

                    b.Property<long?>("timestamp")
                        .HasColumnType("bigint");

                    b.Property<string>("tipo_frete")
                        .HasColumnType("char(1)");

                    b.Property<int?>("transacao")
                        .HasColumnType("int");

                    b.Property<int?>("usuario")
                        .HasColumnType("int");

                    b.Property<decimal?>("valor_frete")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("valor_total")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("valor_unitario")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("cnpj_emp", "cod_pedido", "codigo_fornecedor", "cod_produto");

                    b.ToTable("LinxPedidosCompra", "linx_microvix_erp");
                });

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxMicrovix.LinxPedidosVenda", b =>
                {
                    b.Property<string>("cnpj_emp")
                        .HasColumnType("varchar(14)");

                    b.Property<int>("cod_pedido")
                        .HasColumnType("int");

                    b.Property<int>("codigo_cliente")
                        .HasColumnType("int");

                    b.Property<long>("cod_produto")
                        .HasColumnType("bigint");

                    b.Property<string>("aprovado")
                        .HasColumnType("char(1)");

                    b.Property<string>("cancelado")
                        .HasColumnType("char(1)");

                    b.Property<string>("cod_natureza_operacao")
                        .HasColumnType("char(10)");

                    b.Property<int?>("cod_plano_pagamento")
                        .HasColumnType("int");

                    b.Property<int?>("cod_vendedor")
                        .HasColumnType("int");

                    b.Property<DateTime?>("data_alteracao")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<DateTime?>("data_aprovacao")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<DateTime?>("data_lancamento")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<int?>("deposito")
                        .HasColumnType("int");

                    b.Property<decimal?>("desconto")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("desconto_item")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("doc_origem")
                        .HasColumnType("int");

                    b.Property<int?>("empresa")
                        .HasColumnType("int");

                    b.Property<string>("hora_lancamento")
                        .HasColumnType("char(5)");

                    b.Property<DateTime?>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<decimal?>("margem_contribuicao")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("natureza_operacao")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("nf_gerada")
                        .HasColumnType("text")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Varchar_Max");

                    b.Property<string>("nome_tabela_preco")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("numero_projeto_officina")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("obs")
                        .HasColumnType("text")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Varchar_Max");

                    b.Property<int?>("orcamento_origem")
                        .HasColumnType("int");

                    b.Property<string>("plano_pagamento")
                        .HasColumnType("varchar(35)");

                    b.Property<int?>("pontuacao_ser")
                        .HasColumnType("int");

                    b.Property<int?>("portal")
                        .HasColumnType("int");

                    b.Property<int?>("posicao_item")
                        .HasColumnType("int");

                    b.Property<DateTime?>("previsao_entrega")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<decimal?>("quantidade")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("realizado_por")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("char(1)");

                    b.Property<int?>("tabela_preco")
                        .HasColumnType("int");

                    b.Property<long?>("timestamp")
                        .HasColumnType("bigint");

                    b.Property<int?>("tipo_frete")
                        .HasColumnType("int");

                    b.Property<int?>("transacao")
                        .HasColumnType("int");

                    b.Property<int?>("transacao_origem")
                        .HasColumnType("int");

                    b.Property<int?>("transacao_ws")
                        .HasColumnType("int");

                    b.Property<long?>("transportador")
                        .HasColumnType("bigint");

                    b.Property<int?>("usuario")
                        .HasColumnType("int");

                    b.Property<decimal?>("valor_frete")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("valor_total")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("valor_unitario")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("venda_externa")
                        .HasColumnType("char(1)");

                    b.HasKey("cnpj_emp", "cod_pedido", "codigo_cliente", "cod_produto");

                    b.ToTable("LinxPedidosVenda", "linx_microvix_erp");
                });

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxMicrovix.LinxPlanos", b =>
                {
                    b.Property<int>("plano")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("plano"));

                    b.Property<int?>("cod_forma_pgto")
                        .HasColumnType("int");

                    b.Property<int?>("conta_central")
                        .HasColumnType("int");

                    b.Property<string>("desativado")
                        .HasColumnType("char(1)");

                    b.Property<string>("desc_plano")
                        .HasColumnType("varchar(35)");

                    b.Property<DateTime?>("dt_upd")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<string>("forma_pgto")
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("indice_plano")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime?>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<int?>("portal")
                        .HasColumnType("int");

                    b.Property<int?>("prazo_entre_parcelas")
                        .HasColumnType("int");

                    b.Property<int?>("qtde_parcelas")
                        .HasColumnType("int");

                    b.Property<decimal?>("taxa_financeira")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("timestamp")
                        .HasColumnType("int");

                    b.Property<string>("tipo_plano")
                        .HasColumnType("char(1)");

                    b.Property<string>("tipo_transacao")
                        .HasColumnType("char(1)");

                    b.Property<string>("usa_tef")
                        .HasColumnType("char(1)");

                    b.HasKey("plano");

                    b.ToTable("LinxPlanos", "linx_microvix_erp");
                });

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxMicrovix.LinxPlanosPedidoVenda", b =>
                {
                    b.Property<int>("cod_pedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("cod_pedido"));

                    b.Property<string>("cnpj_emp")
                        .HasColumnType("varchar(14)");

                    b.Property<int?>("cod_forma_pgto")
                        .HasColumnType("int");

                    b.Property<string>("desc_plano")
                        .HasColumnType("varchar(35)");

                    b.Property<string>("forma_pgto")
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("indice_plano")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime?>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<int?>("plano")
                        .HasColumnType("int");

                    b.Property<int?>("portal")
                        .HasColumnType("int");

                    b.Property<int?>("qtde_parcelas")
                        .HasColumnType("int");

                    b.Property<decimal?>("total")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("valor_desc_acresc_plano")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("cod_pedido");

                    b.ToTable("LinxPlanosPedidoVenda", "linx_microvix_erp");
                });

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxMicrovix.LinxProdutos", b =>
                {
                    b.Property<long>("cod_produto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("cod_produto"));

                    b.Property<decimal?>("altura_para_frete")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("cest")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("cod_auxiliar")
                        .HasColumnType("varchar(40)");

                    b.Property<string>("cod_barra")
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("cod_comprador")
                        .HasColumnType("int");

                    b.Property<int?>("cod_fornecedor")
                        .HasColumnType("int");

                    b.Property<string>("codigo_integracao_reshop")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("codigo_integracao_ws")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("componente")
                        .HasColumnType("char(1)");

                    b.Property<decimal?>("comprimento_para_frete")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("curva")
                        .HasColumnType("char(1)");

                    b.Property<string>("desativado")
                        .HasColumnType("char(10)");

                    b.Property<string>("desc_classificacao")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("desc_colecao")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("desc_cor")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("desc_espessura")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("desc_linha")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("desc_marca")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("desc_setor")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("desc_tamanho")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("descricao_basica")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("dt_inclusao")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<DateTime?>("dt_update")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<decimal?>("fator_conversao")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("id_classificacao")
                        .HasColumnType("int");

                    b.Property<int?>("id_colecao")
                        .HasColumnType("int");

                    b.Property<int?>("id_cor")
                        .HasColumnType("int");

                    b.Property<int?>("id_espessura")
                        .HasColumnType("int");

                    b.Property<int?>("id_linha")
                        .HasColumnType("int");

                    b.Property<int?>("id_marca")
                        .HasColumnType("int");

                    b.Property<int?>("id_produtos_opticos_tipo")
                        .HasColumnType("int");

                    b.Property<int?>("id_setor")
                        .HasColumnType("int");

                    b.Property<int?>("id_sped_tipo_item")
                        .HasColumnType("int");

                    b.Property<string>("id_tamanho")
                        .HasColumnType("varchar(5)");

                    b.Property<decimal?>("largura_para_frete")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime?>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<string>("loja_virtual")
                        .HasColumnType("char(1)");

                    b.Property<string>("ncm")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("nome")
                        .HasColumnType("varchar(250)");

                    b.Property<bool?>("obrigatorio_identificacao_cliente")
                        .HasColumnType("boolean")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<int?>("origem_mercadoria")
                        .HasColumnType("int");

                    b.Property<decimal?>("peso_bruto")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("peso_liquido")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("portal")
                        .HasColumnType("int");

                    b.Property<string>("referencia")
                        .HasColumnType("varchar(20)");

                    b.Property<long?>("timestamp")
                        .HasColumnType("bigint");

                    b.Property<string>("unidade")
                        .HasColumnType("varchar(50)");

                    b.HasKey("cod_produto");

                    b.ToTable("LinxProdutos", "linx_microvix_erp");
                });

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxMicrovix.LinxProdutosCamposAdicionais", b =>
                {
                    b.Property<long>("cod_produto")
                        .HasColumnType("bigint");

                    b.Property<string>("campo")
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<int?>("portal")
                        .HasColumnType("int");

                    b.Property<long?>("timestamp")
                        .HasColumnType("bigint");

                    b.Property<string>("valor")
                        .HasColumnType("varchar(30)");

                    b.HasKey("cod_produto", "campo");

                    b.ToTable("LinxProdutosCamposAdicionais", "linx_microvix_erp");
                });

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxMicrovix.LinxProdutosCodBar", b =>
                {
                    b.Property<long>("cod_produto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("cod_produto"));

                    b.Property<string>("cod_barra")
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<int?>("portal")
                        .HasColumnType("int");

                    b.Property<long?>("timestamp")
                        .HasColumnType("bigint");

                    b.HasKey("cod_produto");

                    b.ToTable("LinxProdutosCodBar", "linx_microvix_erp");
                });

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxMicrovix.LinxProdutosDepositos", b =>
                {
                    b.Property<int>("cod_deposito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("cod_deposito"));

                    b.Property<bool?>("disponivel")
                        .HasColumnType("boolean")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<bool?>("disponivel_transferencia")
                        .HasColumnType("boolean")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<DateTime?>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<string>("nome_deposito")
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("portal")
                        .HasColumnType("int");

                    b.Property<long?>("timestamp")
                        .HasColumnType("bigint");

                    b.HasKey("cod_deposito");

                    b.ToTable("LinxProdutosDepositos", "linx_microvix_erp");
                });

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxMicrovix.LinxProdutosDetalhes", b =>
                {
                    b.Property<string>("cnpj_emp")
                        .HasColumnType("varchar(14)");

                    b.Property<int>("cod_produto")
                        .HasColumnType("int");

                    b.Property<string>("cod_barra")
                        .HasColumnType("varchar(20)");

                    b.Property<decimal?>("custo_medio")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("desc_config_tributaria")
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("despesas1")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("empresa")
                        .HasColumnType("int");

                    b.Property<int?>("id_config_tributaria")
                        .HasColumnType("int");

                    b.Property<decimal?>("ipi")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime?>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<int?>("portal")
                        .HasColumnType("int");

                    b.Property<decimal?>("preco_custo")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("preco_venda")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("qtde_maxima")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("qtde_minima")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("quantidade")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("timestamp")
                        .HasColumnType("int");

                    b.HasKey("cnpj_emp", "cod_produto");

                    b.ToTable("LinxProdutosDetalhes", "linx_microvix_erp");
                });

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxMicrovix.LinxProdutosDetalhesDepositos", b =>
                {
                    b.Property<long>("cod_produto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("cod_produto"));

                    b.Property<string>("cnpj_emp")
                        .HasColumnType("varchar(14)");

                    b.Property<int?>("cod_deposito")
                        .HasColumnType("int");

                    b.Property<int?>("empresa")
                        .HasColumnType("int");

                    b.Property<DateTime?>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<int?>("portal")
                        .HasColumnType("int");

                    b.Property<decimal?>("saldo")
                        .HasColumnType("decimal(10,2)");

                    b.Property<long?>("timestamp")
                        .HasColumnType("bigint");

                    b.HasKey("cod_produto");

                    b.ToTable("LinxProdutosDetalhesDepositos", "linx_microvix_erp");
                });

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxMicrovix.LinxProdutosInventario", b =>
                {
                    b.Property<string>("cnpj_emp")
                        .HasColumnType("varchar(14)");

                    b.Property<long>("cod_produto")
                        .HasColumnType("bigint");

                    b.Property<int>("cod_deposito")
                        .HasColumnType("int");

                    b.Property<string>("cod_barra")
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("empresa")
                        .HasColumnType("int");

                    b.Property<DateTime?>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<int?>("portal")
                        .HasColumnType("int");

                    b.Property<decimal?>("quantidade")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("cnpj_emp", "cod_produto", "cod_deposito");

                    b.ToTable("LinxProdutosInventario", "linx_microvix_erp");
                });

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxMicrovix.LinxProdutosPromocoes", b =>
                {
                    b.Property<string>("cnpj_emp")
                        .HasColumnType("varchar(14)");

                    b.Property<long>("cod_produto")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("data_cadastro_promocao")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<long>("id_campanha")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("custo_total_campanha")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime?>("data_inicio_promocao")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<DateTime?>("data_termino_promocao")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<DateTime?>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<string>("nome_campanha")
                        .HasColumnType("varchar(60)");

                    b.Property<int?>("portal")
                        .HasColumnType("int");

                    b.Property<decimal?>("preco_promocao")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("promocao_ativa")
                        .HasColumnType("char(1)");

                    b.Property<bool?>("promocao_opcional")
                        .HasColumnType("boolean")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.HasKey("cnpj_emp", "cod_produto", "data_cadastro_promocao", "id_campanha");

                    b.ToTable("LinxProdutosPromocoes", "linx_microvix_erp");
                });

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxMicrovix.LinxProdutosTabelas", b =>
                {
                    b.Property<int>("id_tabela")
                        .HasColumnType("int");

                    b.Property<string>("cnpj_emp")
                        .HasColumnType("varchar(14)");

                    b.Property<string>("tipo_tabela")
                        .HasColumnType("char(1)");

                    b.Property<string>("ativa")
                        .HasColumnType("char(1)");

                    b.Property<string>("codigo_integracao_ws")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<string>("nome_tabela")
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("portal")
                        .HasColumnType("int");

                    b.Property<int?>("timestamp")
                        .HasColumnType("int");

                    b.HasKey("id_tabela", "cnpj_emp", "tipo_tabela");

                    b.ToTable("LinxProdutosTabelas", "linx_microvix_erp");
                });

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxMicrovix.LinxProdutosTabelasPrecos", b =>
                {
                    b.Property<long>("cod_produto")
                        .HasColumnType("bigint");

                    b.Property<string>("cnpj_emp")
                        .HasColumnType("varchar(14)");

                    b.Property<int>("id_tabela")
                        .HasColumnType("int");

                    b.Property<DateTime?>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<int?>("portal")
                        .HasColumnType("int");

                    b.Property<decimal?>("precovenda")
                        .HasColumnType("decimal(10,2)");

                    b.Property<long?>("timestamp")
                        .HasColumnType("bigint");

                    b.HasKey("cod_produto", "cnpj_emp", "id_tabela");

                    b.ToTable("LinxProdutosTabelasPrecos", "linx_microvix_erp");
                });

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxMicrovix.LinxRotinaOrigem", b =>
                {
                    b.Property<int>("codigo_rotina")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("codigo_rotina"));

                    b.Property<string>("descricao_rotina")
                        .HasColumnType("varchar(150)");

                    b.Property<DateTime?>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<int?>("portal")
                        .HasColumnType("int");

                    b.Property<long?>("timestamp")
                        .HasColumnType("bigint");

                    b.HasKey("codigo_rotina");

                    b.ToTable("LinxRotinaOrigem", "linx_microvix_erp");
                });

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxMicrovix.LinxSetores", b =>
                {
                    b.Property<int>("id_setor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_setor"));

                    b.Property<int?>("ativo")
                        .HasColumnType("integer")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<string>("codigo_integracao_ws")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("desc_setor")
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<long?>("timestamp")
                        .HasColumnType("bigint");

                    b.HasKey("id_setor");

                    b.ToTable("LinxSetores", "linx_microvix_erp");
                });

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxMicrovix.LinxUsuarios", b =>
                {
                    b.Property<int>("usuario_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("usuario_id"));

                    b.Property<DateTime?>("data_criacao")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<string>("desativado")
                        .HasColumnType("char(1)");

                    b.Property<string>("empresas")
                        .HasColumnType("text")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Varchar_Max");

                    b.Property<string>("grupo_usuarios")
                        .HasColumnType("char(1)");

                    b.Property<DateTime>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<int?>("portal")
                        .HasColumnType("int");

                    b.Property<long?>("timestamp")
                        .HasColumnType("bigint");

                    b.Property<string>("usuario_doc")
                        .HasColumnType("varchar(14)");

                    b.Property<string>("usuario_email")
                        .HasColumnType("varchar(60)");

                    b.Property<int?>("usuario_grupo_id")
                        .HasColumnType("int");

                    b.Property<string>("usuario_login")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("usuario_nome")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("usuario_supervisor")
                        .HasColumnType("char(1)");

                    b.Property<int?>("vendedor")
                        .HasColumnType("int");

                    b.HasKey("usuario_id");

                    b.ToTable("LinxUsuarios", "linx_microvix_erp");
                });

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxMicrovix.LinxVendedores", b =>
                {
                    b.Property<int>("cod_vendedor")
                        .HasColumnType("int");

                    b.Property<string>("cpf_vendedor")
                        .HasColumnType("varchar(14)");

                    b.Property<string>("ativo")
                        .HasColumnType("char(1)");

                    b.Property<string>("cargo")
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("data_admissao")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<DateTime?>("data_saida")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<string>("descricao_tipo_venda")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("dt_upd")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<string>("end_vend_bairro")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("end_vend_cep")
                        .HasColumnType("varchar(9)");

                    b.Property<string>("end_vend_cidade")
                        .HasColumnType("varchar(40)");

                    b.Property<string>("end_vend_complemento")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("end_vend_numero")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("end_vend_rua")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("end_vend_uf")
                        .HasColumnType("char(2)");

                    b.Property<string>("fone_vendedor")
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("id_tipo_venda")
                        .HasColumnType("int");

                    b.Property<DateTime>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<string>("mail_vendedor")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("matricula")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("nome_vendedor")
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("portal")
                        .HasColumnType("int");

                    b.Property<long?>("timestamp")
                        .HasColumnType("bigint");

                    b.Property<string>("tipo_vendedor")
                        .HasColumnType("char(1)");

                    b.HasKey("cod_vendedor", "cpf_vendedor");

                    b.ToTable("LinxVendedores", "linx_microvix_erp");
                });

            modelBuilder.Entity("Domain.LinxMicrovix.Outbound.WebService.Entites.LinxMicrovix.LinxXMLDocumentos", b =>
                {
                    b.Property<string>("cnpj_emp")
                        .HasColumnType("varchar(14)");

                    b.Property<int>("documento")
                        .HasColumnType("int");

                    b.Property<string>("chave_nfe")
                        .HasColumnType("varchar(44)");

                    b.Property<string>("cStat")
                        .HasColumnType("varchar(5)");

                    b.Property<int?>("cod_cliente")
                        .HasColumnType("int");

                    b.Property<DateTime?>("data_emissao")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<DateTime?>("dt_insert")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<bool?>("excluido")
                        .HasColumnType("boolean")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Bool");

                    b.Property<int?>("id_nfe")
                        .HasColumnType("int");

                    b.Property<Guid?>("identificador_microvix")
                        .HasColumnType("uuid")
                        .HasAnnotation("Custom:ColumnTypeMapper", "UUID");

                    b.Property<DateTime?>("lastupdateon")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Custom:ColumnTypeMapper", "DateTime");

                    b.Property<string>("nProtCanc")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("nProtDeneg")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("nProtInut")
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("portal")
                        .HasColumnType("int");

                    b.Property<string>("serie")
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("situacao")
                        .HasColumnType("int");

                    b.Property<long?>("timestamp")
                        .HasColumnType("bigint");

                    b.Property<string>("xml")
                        .HasColumnType("text")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Varchar_Max");

                    b.Property<string>("xmlDistribuicao")
                        .HasColumnType("text")
                        .HasAnnotation("Custom:ColumnTypeMapper", "Varchar_Max");

                    b.HasKey("cnpj_emp", "documento", "chave_nfe");

                    b.ToTable("LinxXMLDocumentos", "linx_microvix_erp");
                });
#pragma warning restore 612, 618
        }
    }
}
